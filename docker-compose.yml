services:
  postgres:
    image: postgres:14.0
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    logging:
      options:
        max-size: 10m
        max-file: "3"
    networks:
      - confluent
  webserver:
    # network_mode: "host" # docker dung chung mang voi host
    build: 
      context: .
      dockerfile: Dockerfile  # Custom Dockerfile defined above
    command: webserver
    entrypoint: ['/opt/airflow/script/entrypoint.sh']
    depends_on:
      - postgres
    environment:
      - LOAD_EX=n
      - EXECUTOR=Sequential
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW_WEBSERVER_SECRET_KEY=this_is_a_very_secured_key
      - QDRANT_HOST=host.docker.internal
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - "8080:8080"
    healthcheck:
      test: ['CMD-SHELL', "[ -f /opt/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data_DE:/opt/airflow/data_DE
    networks:
      - confluent

  scheduler:
    # network_mode: "host"
    build: 
      context: .
      dockerfile: Dockerfile  # Custom Dockerfile defined above
    depends_on:
      webserver:
        condition: service_healthy
    volumes:
      - ./dags:/opt/airflow/dags
      - ./script/entrypoint.sh:/opt/airflow/script/entrypoint.sh
      - ./requirements.txt:/opt/airflow/requirements.txt
      - ./data_DE:/opt/airflow/data_DE
    environment:
      - LOAD_EX=n
      - EXECUTOR=Sequential
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW_WEBSERVER_SECRET_KEY=this_is_a_very_secured_key
      - QDRANT_HOST=host.docker.internal
    command: bash -c "airflow db upgrade && airflow scheduler"
    networks:
      - confluent

  qdrant:
    image: qdrant/qdrant
    ports:
      - "6333:6333"
    volumes:
      - ./qdrant_storage:/qdrant/storage
    networks:
      - confluent
networks:
  confluent:
    name: confluent